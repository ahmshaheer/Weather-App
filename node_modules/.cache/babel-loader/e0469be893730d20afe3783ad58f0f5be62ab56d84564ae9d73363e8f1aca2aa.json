{"ast":null,"code":"var _jsxFileName = \"/Users/alkaramcomputer/Documents/Reactjs/Projects/weatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = {\n  key: '5025682a09668f06c331b6ae4408a453'\n};\nconst App = () => {\n  _s();\n  const [inputCity, setInputCity] = useState(\"\");\n  const [data, setData] = useState({});\n  const location = cityName => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY.key}`).then(resp => resp.json()).then(resp => setData(resp.data)).then(error => console.log(error));\n  };\n  const searching = () => {\n    location(inputCity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fullApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        onChange: e => setInputCity(e.target.value),\n        value: inputCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: searching,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"weathorCity\",\n        children: data === null || data === void 0 ? void 0 : data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Hot Or Cold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TVB1KRgR/UcGFrAKr7aFzdahAnM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","API_KEY","key","App","inputCity","setInputCity","data","setData","location","cityName","fetch","then","resp","json","error","console","log","searching","e","target","value","name"],"sources":["/Users/alkaramcomputer/Documents/Reactjs/Projects/weatherapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'\nconst API_KEY = {\n  key: '5025682a09668f06c331b6ae4408a453'\n}\n\nconst App = () => {\n  const [inputCity, setInputCity] = useState(\"\")\n  const [data, setData] = useState({})\n\n  const location = (cityName) => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY.key}`)\n      .then(resp => resp.json())\n      .then(resp => setData(resp.data))\n      .then(error => console.log(error))\n  }\n  const searching = () => {\n    location(inputCity)\n  }\n  return (\n    <div className='fullApp'>\n      <div className='input'>\n        <input required type='text' onChange={e => setInputCity(e.target.value)} value={inputCity} />\n      </div>\n      <div className='btnContainer'>\n        <button className='btn' onClick={searching}>Search</button>\n\n      </div>\n\n\n      <div>\n        <h5 className=\"weathorCity\">\n          {data?.name}\n        </h5>\n        <h5>Hot Or Cold</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAA;AAClB,MAAMC,OAAO,GAAG;EACdC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMQ,QAAQ,GAAIC,QAAQ,IAAK;IAC7BC,KAAK,CAAE,qDAAoDD,QAAS,UAASR,OAAO,CAACC,GAAI,EAAC,CAAC,CACxFS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACC,IAAI,IAAIL,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC,CAAC,CAChCK,IAAI,CAACG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACtC,CAAC;EACD,MAAMG,SAAS,GAAG,MAAM;IACtBT,QAAQ,CAACJ,SAAS,CAAC;EACrB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAK,SAAS,EAAC,OAAO;MAAA,uBACpB;QAAO,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEc,CAAC,IAAIb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,KAAK,EAAEhB;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzF,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEa,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QAEvD,eAGN;MAAA,wBACE;QAAI,SAAS,EAAC,aAAa;QAAA,UACxBX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe;MAAI;QAAA;QAAA;QAAA;MAAA,QACR,eACL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAhCKlB,GAAG;AAAA,KAAHA,GAAG;AAkCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}